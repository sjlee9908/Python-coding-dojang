예외처리 사용하기

예외
코드를 실행하는 중에 발생한 에러

try, except
try:
	실행할 코드
except:
	예외가 발생했을 때 처리하는 코드


특정 예외만 처리하기
try:
	실행할 코드
except 예외이름:
	예외를 발생했을 때 처리하는 코드


에러의 예외메시지 받아오기
try:
	실행할 코드
except 예외 as 변수:
	예외가 발생했을 때 처리하는 코드


예외가 발생하지 않았을 때의 코드 실행
try:
	실행할 코드
except:
	예외가 발생했을 때 처리하는 코드
else:
	예외가 발생하지 않았을 때 실행할 코드


예외와는 상관없이 항상 코드 실행
try:
	실행할 코드
except:
	예외가 발생했을 때 처리하는 코드
else:
	예외가 발생하지 않았을 때 실행할 코드
finally:
	예외 발생 야부와 상관없이 항상 실행할 코드


예외 발생시키기
raise 예외('에러메시지')


현재 예외를 다시 발생시키기
except블록 안에서 raise를 사용 --> 현재 예외를 다시 발생시킴


assert로 예외 발생시키기
assert 조건식, 에러메시지

예외 만들기 - 사용자 제외 예외
Exception을 상속받아서 새로운 클래스를 만들면 됨
class 예외이름(Exception):
	def __init__(self):
		super().__init__('에러메시지')













정규표현식

정규표현식
일정한 규칙을 가진 문자열을 표현하는 방법

re모듈
정규표현식을 사용하기 위해 가져와야하는 모듈

re.match('패턴', '문자열')
문자열 안에 패턴이 있는지 확인
있으면 매치 객체가 반환

문자열이 맨 앞에 오는 지 판단
re.search('^문자열', '문자열')

문자열이 맨 뒤에 오는 지 판단
re.search('문자열$', '문자열')

지정된 문자열이 하나라도 표현되는지 판단
|
특정문자열에서 지정된 문자열이 하나라도 포함되는지 판단

범위판단
[]안에 숫자범위를 넣고 *또는+를 붙임
*는 0개 이상 있는지
+는 1개 이상있는지 판단'

문자가 1개만 있는지 판단
문자?는 0개 또는 1개인지 판단
문자 .은 1개 있는지 판단

문자 개수 판단
문자{숫자}, (문자열){숫자}
특정범위의 문자가 정확히 몇개있는지 판단

특정범위의 문자가 몇개 있는지 판단
[0-9]{개수}

문자의 개수 범위 지정
(문자){시작개수, 끝개수}
문자 개수가 시작개수, 끝개수 사이에 들어가는지 확인

숫자, 영문 문자 조합해 판단
[0-9a-z]
붙여쓰기

특정문자 범위에 포함되는지 않는지 판단
[^범위]*
[^범위]+
문자 범위 앞에 ^를 붙이면 해당 범위 제외

특정 문자범위로 시작하는지 판단할 때
^[범위]*
^[범위]+

특정 문자범위로 끝나는지 판단할 때
[범위]*$
[범위]+&

특수문자 판단하기
\를 붙임

공백처리하기
' '공백문자 넣기
\S, \s로 표현

같은 정규표현식 패턴을 자주 사용할 때
객체=re.complie('패턴')
객체.match('문자열')
객체.search('문자열')

정규표현식 그룹
패턴 안에서 정규표현식을 ()로 묶음
(패턴)(패턴)
각 그룹에 해당하는 문자열

매치객체.groups()
각 그룹에 해당하는 문자열 튜플로 반환

그룹에 이름 붙이기
(?<이름>정규표현식)

re.findall('패턴', '문자열')
그룹 지정 없이 패턴에 매칭되는 모든 문자열 가져오기

문자열 바꾸기
정규표현식으로 특정 문자열을 찾은 뒤 다른 문자열로 바꾸기
re.sub('패턴', '바꿀문자열', '문자열', 바꿀횟수)
바꿀문자열 대신 함수를 지정가능

찾은 문자열을 결과에 다시 사용
그룹으로 묶인 문자열을 \\숫자 형식으로 가져와서 사용가능












클래스 상속

클래스 상속
물려박은 기능을 유지한 채로 다른 기능을 추가할 때 사용하는 기능

기반 클래스=부모클래스=슈퍼클래스
기능을 물려주는 클래스

파생 클래스=자식클래스=서브클래스
상속을 받아 새롭게 만드는 클래스

클래스상속하기
class 기반클래스이름:
	코드

class 파생클래스이름(기반클래스이름):
	코드

상속관계 확인하기
issubclass(파생클래스, 기반클래스)
True, False

is-a 관계
상속

has-a관계
포함

기반클래스의 속성 사용하기
super().메서드
기반 클래스의 __init__메서드 호출, 호출안하면 기반 클래스의 속성 사용불가
or
파생클래스의 __init__메서드 생략 -> 자동으로 부모클래스의 __init__ 호출

메서드 오버라이딩
파생클래스에서 기반클래스의 메서드를 새로 정의
원래 기능을 유지하면서 새로운 기능을 덧붙일 때 사용

다이아몬드 상속
절대 쓰지 말것

메서드 탐색 순서
클래스.mro()
메서드 탐색 순서 출력

추상클래스
메서드의 목록만 가진 클래스, 상속받는 클래스에서 메서드 구현을 강제하기 위해 사용
from abc import *
class 추상클래스이름(metaclass=ABCMeta):
	@abstractmethod
	def 메서드이름(self):
		코드




세트(집합)

세트={}

세트 안에 세트는 불가능

요소는 중복불가

[]로 특정요소 출력 불가

특정 값 있는 지 알아보기
값 in 세트

특정값이 없는 지 알이 보기
값 not in 세트

set()로 세트 만들기
set(반복가능한 객체)

내용을 변경할 수 없는 세트
frozenset()
frozenset안에는 frozenset 중첩가능

합집합
|연산자
세트1|세트2
or
.union()
set.union(세트1, 세트2)

교집합
&연산자
세트1&세트2
or
.intersection()
세트1.intersection(세트2)

차집합
-연산자
세트1-세트2
or
.difference()
set.difference(세트1,세트2)

대칭차집합
^연산자
세트1^세트2
or
.symmetric_difference()
set.symmetric_difference(세트1,세트2)

현재 세트에 다른 세트를 더함
|=
세트1|=세트2
or
.update(반복가능한 객체)
세트1.update(세트2)

현재 세트에 다른 세트를 뺌
-=
세트1-=세트2
or
.difference_update()
세트1.difference_update(세트2)

현재 세트와 다른 세트 중에서 겹치지 않는 요소만 현재 세트에 저장
^=
세트1^=세트2
or
.symmetric_difference_update()
세트1.symmetric_difference_update(세트2)

현재세트가 다른세트의 부분집합인지 확인
현재세트<=다른세트
현재세트.issubset(다른세트)

현재세트가 다른세트의 진부분집합인지 확인
현재세트<다른세트

현재세트가 다른세트의 상위집합인지 확인
현재세트>=다른세트
현재세트.issuperset(다른세트)

현재세트가 다른세트의 진상위집합인지 확인
현재세트>다른세트

세트동일여부 확인
세트1 == 세트2

세트 2개를 비교해 겹치는 요소가 있는지 확인
현재세트.isdisjoint(다른세트)
return True 겹치는 요소가 없음
return False 겹치는 요소가 있음

세트에 요소를 추가
세트1.add(요소)

세트에 특정 요소를 삭제
세트1.remove(요소)
세트1.discard(요소)

세트에서 임의 요소 삭제
세트1.pop()

세트의 모든 요소 삭제
세트1.clear()

세트의 요소 개수 구하기
len(세트1)

할당, 복사
반복가능한 객체와 동일

반복문으로 요소 출력

세트 표현식 사용
{식 for 변수 in 반복가능한 객체}

세트 표현식에 if문 사용
{식 for 변수 in 반복가능한 객체 if 조건식}





































